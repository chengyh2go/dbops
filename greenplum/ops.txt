--查询版本
select version();

-- 查询数据库
select datname from pg_database;

--查询表
select * from pg_class;
--示例：
select * from pg_class where relname='ads_uid_label';
select * from pg_class where relname like '%ads_uid_label%';

--查询字段
select * from pg_attribute;
--示例
select * from pg_attribute where attname='xuid'

-- 查询数据库及数据库大小
select datname,pg_size_pretty(pg_database_size(datname)) from pg_database;

--列属性和数据被拷贝，但不包含约束（如非空）、注释和序列
CREATE TABLE dest_table_name as SELECT * from source_table_name;

--只复制表结构(默认复制非空约束)，没有数据
CREATE TABLE dest_table_name (like source_table_name);

--如果索引、主键约束和唯一约束需要被复制的话，那么需要在后面加上参数including indexes
CREATE TABLE dest_table_name (like source_table_name including indexes);

-- 查询Greenplum下一个schema中表的owner,示例以"public"为例
select c.relname,  pg_catalog.pg_get_userbyid(c.relowner) as "Owner"
from pg_catalog.pg_class c, pg_catalog.pg_namespace n
where
n.oid = c.relnamespace
and n.nspname='public'
and  c.relkind='r'  and relstorage in ('h', 'a');


++++++++++++++++++跟外表相关的操作（以阿里的adb pg环境为例）+++++++++++++++++++++++++++++++++
-- 1 在AnalyticDB PostgreSQL数据库中创建ODPS FDW插件，写：pg_catalog.pg_extension
CREATE EXTENSION odps_fdw; 

-- 2 将使用权赋权给所有用户，示例如下：
GRANT USAGE ON FOREIGN DATA WRAPPER odps_fdw TO PUBLIC;
或者，赋给某个用户：
GRANT USAGE ON FOREIGN DATA WRAPPER odps_fdw TO quickbidev;

-- 3 创建 ODPS Server，写：pg_catalog.pg_foreign_server
CREATE SERVER odps_serv
  FOREIGN DATA WRAPPER odps_fdw
  OPTIONS (
    odps_endpoint 'http://service.cn-shanghai-test-d01.odps.ops.aliyun.jq.cics:80/api'
  );

-- 4 创建 ODPS User Mapping
CREATE USER MAPPING FOR  PUBLIC
  SERVER odps_serv
  OPTIONS (
    id '<odps access id>', --MaxCompute Account ID
    key '<odps access key>' --MaxCompute Account Key
  );
 
  CREATE USER MAPPING FOR  quickbidev
  SERVER odps_serv_2                                  -- ODPS Server 名称
  OPTIONS (
    id '<odps access id>',                                -- ODPS Account ID
    key '<odps access key>'                               -- ODPS Account Key
  );
  --写到了pg_catalog.pg_user_mappings这个视图中

-- 5 创建外表，写：pg_catalog.pg_foreign_table
CREATE FOREIGN TABLE IF NOT EXISTS ft_ads_uid_label (
uid  TEXT,
uid_type  TEXT,
equp_id  TEXT --示例字段
)
  SERVER odps_serv
  OPTIONS (
    project 'MC_IDP_dev',                   -- ODPS 项目空间
    table 'ads_uid_label',                       -- ODPS 表名称
    partition 'ds=20210923'
);

-- 6 创建本地表
CREATE TABLE test_local_ads_uid_label (
  uid  TEXT,
  uid_type  TEXT,
  equp_id  TEXT --示例字段
);

--7 导入外表数据到本地表，方式一：insert
INSERT INTO <本地目标表> SELECT * FROM <外表>;

--导入外表数据到本地表，方式二：create
CREATE TABLE <本地目标表> AS SELECT * FROM <外表>;

-- 对系统表的操作
select * from pg_catalog.pg_foreign_table;
set allow_system_table_mods=True;
insert into pg_catalog.pg_foreign_table(ftrelid,ftserver) values(123,123);
delete from pg_catalog.pg_foreign_table;

-- 删除external外表
drop external table ft_text_test01;
-- 删除foreign外表
drop foreign table ft_text_test01;

--将表的一列都置为同一个值：
UPDATE test_ads_uid_label SET ds='20211029';

--增加字段
ALTER TABLE table_name
ADD COLUMN new_column_name data_type;

--同时增加多个字段
ALTER TABLE table_name
ADD COLUMN new_column_name_1 data_type constraint,
ADD COLUMN new_column_name_2 data_type constraint,
...
ADD COLUMN new_column_name_n data_type constraint;
